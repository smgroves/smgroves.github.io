name: Export Pluto Notebooks & Deploy to GitHub Pages

on:
    push:
        branches:
            - master
    workflow_dispatch:

concurrency:
    group: export
    cancel-in-progress: true

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: üì• Checkout existing GitHub Pages deployment (preserve Jekyll site)
              uses: actions/checkout@v4
              with:
                  ref: gh-pages  # Fetch the currently deployed website
                  path: site_output

            - name: üì• Checkout master branch (Pluto source)
              uses: actions/checkout@v4
              with:
                  path: master_source

            - name: üîß Install Julia
              uses: julia-actions/setup-julia@v2
              with:
                  version: "1.11"

            - name: ‚è± Cache Pluto notebook states
              uses: actions/cache@v4
              with:
                path: _cache
                key: ${{ runner.os }}-pluto_state_cache-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}-${{ github.run_id }}
                restore-keys: |
                    ${{ runner.os }}-pluto_state_cache-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
            
            - name: üèó Ensure Pluto src directory exists
              run: |
                mkdir -p julia/src
                echo "Checking if src/ has any notebooks..."
                ls -l julia/src

            - name: üèó Generate Pluto notebook exports
              run: |
                julia --project=pluto-deployment-environment -e '
                  import Pkg
                  Pkg.instantiate()
                  Pkg.add("PlutoPages")
                  import PlutoPages
                  
                  PlutoPages.generate("julia"; html_report_path="generation_report.html")'
                  
              env:
                JULIA_PKG_SERVER: ""
                
            - name: üèó Ensure julia directory exists
              run: |
                mkdir -p julia  # Create the pluto directory if it doesn‚Äôt exist
                echo "Checking julia/ directory:"
                ls -l -a julia  # List files to confirm it's not empty

            - name: üìú Generate Notebook List for Jekyll
              run: |
                  mkdir -p _data  # Ensure _data/ exists
                  ls -l -a master_source/julia/src
                  echo "notebooks:" > _data/pluto_notebooks.yml
                  find master_source/julia/src -name "*.html" | while read file; do
                    filename=$(basename "$file" .html)
                    formatted_name=$(echo "$filename" | sed 's/_/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)}1')
                    echo "  - title: \"$formatted_name\"" >> _data/pluto_notebooks.yml
                    echo "    url: \"/pluto/$filename.html\"" >> _data/pluto_notebooks.yml
                  done

            - name: üèó Merge Pluto notebooks into existing site
              run: |
                mkdir -p site_output/pluto
                cp -r master_source/julia/src/* site_output/pluto  # Move Pluto notebooks to /pluto/
                ls -l -a site_output  # Debugging: Verify contents before deploying
            
            - name: Check updated site (Jekyll + Pluto)
              run: |
                  cd site_output  # Move into the site_output directory where the site is stored
                  ls -l -a  # Debugging: List contents before deploying
                  cd ..  # Move back to the root GitHub Actions workspace
                  ls -l -a  # Debugging: Ensure we are in the correct directory
              
            - name: üöÄ Deploy updated site (Jekyll + Pluto)
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  branch: gh-pages
                  folder: site_output

